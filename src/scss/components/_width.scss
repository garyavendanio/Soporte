// Name:            Width
// Description:     Utilities for widths
//
// Component:       `x-child-width-*`
//                  `x-width-*`
//
// ========================================================================


// Variables
// ========================================================================

$width-small-width  : 150px !default;
$width-medium-width : 300px !default;
$width-large-width  : 450px !default;
$width-xlarge-width : 600px !default;
$width-2xlarge-width: 750px !default;


/* ========================================================================
   Component: Width
 ========================================================================== */


/* Equal child widths
 ========================================================================== */

[class*='x-child-width']>* {
    box-sizing: border-box;
    width     : 100%;
}

.x-child-width-1-2>* {
    width: 50%;
}

.x-child-width-1-3>* {
    width: unquote('calc(100% * 1 / 3.001)');
}

.x-child-width-1-4>* {
    width: 25%;
}

.x-child-width-1-5>* {
    width: 20%;
}

.x-child-width-1-6>* {
    width: unquote('calc(100% * 1 / 6.001)');
}

.x-child-width-auto>* {
    width: auto;
}

/*
 * 1. Reset the `min-width`, which is set to auto by default, because
 *    flex items won't shrink below their minimum intrinsic content size.
 *    Using `1px` instead of `0`, so items still wrap into the next line,
 *    if they have zero width and padding and the predecessor is 100% wide.
 */

.x-child-width-expand> :not([class*='x-width']) {
    flex     : 1;
    /* 1 */
    min-width: 1px;
}

/* Phone landscape and bigger */
@media (min-width: $breakpoint-small) {

    .x-child-width-1-1\:small>* {
        width: 100%;
    }

    .x-child-width-1-2\:small>* {
        width: 50%;
    }

    .x-child-width-1-3\:small>* {
        width: unquote('calc(100% * 1 / 3.001)');
    }

    .x-child-width-1-4\:small>* {
        width: 25%;
    }

    .x-child-width-1-5\:small>* {
        width: 20%;
    }

    .x-child-width-1-6\:small>* {
        width: unquote('calc(100% * 1 / 6.001)');
    }

    .x-child-width-auto\:small>* {
        width: auto;
    }

    .x-child-width-expand\:small> :not([class*='x-width']) {
        flex     : 1;
        min-width: 1px;
    }

}

/* Tablet landscape and bigger */
@media (min-width: $breakpoint-medium) {

    .x-child-width-1-1\:medium>* {
        width: 100%;
    }

    .x-child-width-1-2\:medium>* {
        width: 50%;
    }

    .x-child-width-1-3\:medium>* {
        width: unquote('calc(100% * 1 / 3.001)');
    }

    .x-child-width-1-4\:medium>* {
        width: 25%;
    }

    .x-child-width-1-5\:medium>* {
        width: 20%;
    }

    .x-child-width-1-6\:medium>* {
        width: unquote('calc(100% * 1 / 6.001)');
    }

    .x-child-width-auto\:medium>* {
        width: auto;
    }

    .x-child-width-expand\:medium> :not([class*='x-width']) {
        flex     : 1;
        min-width: 1px;
    }

}

/* Desktop and bigger */
@media (min-width: $breakpoint-large) {

    .x-child-width-1-1\:large>* {
        width: 100%;
    }

    .x-child-width-1-2\:large>* {
        width: 50%;
    }

    .x-child-width-1-3\:large>* {
        width: unquote('calc(100% * 1 / 3.001)');
    }

    .x-child-width-1-4\:large>* {
        width: 25%;
    }

    .x-child-width-1-5\:large>* {
        width: 20%;
    }

    .x-child-width-1-6\:large>* {
        width: unquote('calc(100% * 1 / 6.001)');
    }

    .x-child-width-auto\:large>* {
        width: auto;
    }

    .x-child-width-expand\:large> :not([class*='x-width']) {
        flex     : 1;
        min-width: 1px;
    }

}

/* Large screen and bigger */
@media (min-width: $breakpoint-xlarge) {

    .x-child-width-1-1\:xlarge>* {
        width: 100%;
    }

    .x-child-width-1-2\:xlarge>* {
        width: 50%;
    }

    .x-child-width-1-3\:xlarge>* {
        width: unquote('calc(100% * 1 / 3.001)');
    }

    .x-child-width-1-4\:xlarge>* {
        width: 25%;
    }

    .x-child-width-1-5\:xlarge>* {
        width: 20%;
    }

    .x-child-width-1-6\:xlarge>* {
        width: unquote('calc(100% * 1 / 6.001)');
    }

    .x-child-width-auto\:xlarge>* {
        width: auto;
    }

    .x-child-width-expand\:xlarge> :not([class*='x-width']) {
        flex     : 1;
        min-width: 1px;
    }

}


/* Single Widths
 ========================================================================== */

/*
 * 1. `max-width` is needed for the pixel-based classes
 */

[class*='x-width'] {
    box-sizing: border-box;
    width     : 100%;
    /* 1 */
    max-width : 100%;
}

/* Halves */
.x-width-1-2 {
    width: 50%;
}

/* Thirds */
.x-width-1-3 {
    width: unquote('calc(100% * 1 / 3.001)');
}

.x-width-2-3 {
    width: unquote('calc(100% * 2 / 3.001)');
}

/* Quarters */
.x-width-1-4 {
    width: 25%;
}

.x-width-3-4 {
    width: 75%;
}

/* Fifths */
.x-width-1-5 {
    width: 20%;
}

.x-width-2-5 {
    width: 40%;
}

.x-width-3-5 {
    width: 60%;
}

.x-width-4-5 {
    width: 80%;
}

/* Sixths */
.x-width-1-6 {
    width: unquote('calc(100% * 1 / 6.001)');
}

.x-width-5-6 {
    width: unquote('calc(100% * 5 / 6.001)');
}

/* Pixel */
.x-width-small {
    width: $width-small-width;
}

.x-width-medium {
    width: $width-medium-width;
}

.x-width-large {
    width: $width-large-width;
}

.x-width-xlarge {
    width: $width-xlarge-width;
}

.x-width-2xlarge {
    width: $width-2xlarge-width;
}

@if ($deprecated==true) {
    .x-width-xxlarge {
        width: $width-2xlarge-width;
    }
}

/* Auto */
.x-width-auto {
    width: auto;
}

/* Expand */
.x-width-expand {
    flex     : 1;
    min-width: 1px;
}

/* Phone landscape and bigger */
@media (min-width: $breakpoint-small) {

    /* Whole */
    .x-width-1-1\:small {
        width: 100%;
    }

    /* Halves */
    .x-width-1-2\:small {
        width: 50%;
    }

    /* Thirds */
    .x-width-1-3\:small {
        width: unquote('calc(100% * 1 / 3.001)');
    }

    .x-width-2-3\:small {
        width: unquote('calc(100% * 2 / 3.001)');
    }

    /* Quarters */
    .x-width-1-4\:small {
        width: 25%;
    }

    .x-width-3-4\:small {
        width: 75%;
    }

    /* Fifths */
    .x-width-1-5\:small {
        width: 20%;
    }

    .x-width-2-5\:small {
        width: 40%;
    }

    .x-width-3-5\:small {
        width: 60%;
    }

    .x-width-4-5\:small {
        width: 80%;
    }

    /* Sixths */
    .x-width-1-6\:small {
        width: unquote('calc(100% * 1 / 6.001)');
    }

    .x-width-5-6\:small {
        width: unquote('calc(100% * 5 / 6.001)');
    }

    /* Pixel */
    .x-width-small\:small {
        width: $width-small-width;
    }

    .x-width-medium\:small {
        width: $width-medium-width;
    }

    .x-width-large\:small {
        width: $width-large-width;
    }

    .x-width-xlarge\:small {
        width: $width-xlarge-width;
    }

    .x-width-2xlarge\:small {
        width: $width-2xlarge-width;
    }

    @if ($deprecated==true) {
        .x-width-xxlarge\:small {
            width: $width-2xlarge-width;
        }
    }

    /* Auto */
    .x-width-auto\:small {
        width: auto;
    }

    /* Expand */
    .x-width-expand\:small {
        flex     : 1;
        min-width: 1px;
    }

}

/* Tablet landscape and bigger */
@media (min-width: $breakpoint-medium) {

    /* Whole */
    .x-width-1-1\:medium {
        width: 100%;
    }

    /* Halves */
    .x-width-1-2\:medium {
        width: 50%;
    }

    /* Thirds */
    .x-width-1-3\:medium {
        width: unquote('calc(100% * 1 / 3.001)');
    }

    .x-width-2-3\:medium {
        width: unquote('calc(100% * 2 / 3.001)');
    }

    /* Quarters */
    .x-width-1-4\:medium {
        width: 25%;
    }

    .x-width-3-4\:medium {
        width: 75%;
    }

    /* Fifths */
    .x-width-1-5\:medium {
        width: 20%;
    }

    .x-width-2-5\:medium {
        width: 40%;
    }

    .x-width-3-5\:medium {
        width: 60%;
    }

    .x-width-4-5\:medium {
        width: 80%;
    }

    /* Sixths */
    .x-width-1-6\:medium {
        width: unquote('calc(100% * 1 / 6.001)');
    }

    .x-width-5-6\:medium {
        width: unquote('calc(100% * 5 / 6.001)');
    }

    /* Pixel */
    .x-width-small\:medium {
        width: $width-small-width;
    }

    .x-width-medium\:medium {
        width: $width-medium-width;
    }

    .x-width-large\:medium {
        width: $width-large-width;
    }

    .x-width-xlarge\:medium {
        width: $width-xlarge-width;
    }

    .x-width-2xlarge\:medium {
        width: $width-2xlarge-width;
    }

    @if ($deprecated==true) {
        .x-width-xxlarge\:medium {
            width: $width-2xlarge-width;
        }
    }

    /* Auto */
    .x-width-auto\:medium {
        width: auto;
    }

    /* Expand */
    .x-width-expand\:medium {
        flex     : 1;
        min-width: 1px;
    }

}

/* Desktop and bigger */
@media (min-width: $breakpoint-large) {

    /* Whole */
    .x-width-1-1\:large {
        width: 100%;
    }

    /* Halves */
    .x-width-1-2\:large {
        width: 50%;
    }

    /* Thirds */
    .x-width-1-3\:large {
        width: unquote('calc(100% * 1 / 3.001)');
    }

    .x-width-2-3\:large {
        width: unquote('calc(100% * 2 / 3.001)');
    }

    /* Quarters */
    .x-width-1-4\:large {
        width: 25%;
    }

    .x-width-3-4\:large {
        width: 75%;
    }

    /* Fifths */
    .x-width-1-5\:large {
        width: 20%;
    }

    .x-width-2-5\:large {
        width: 40%;
    }

    .x-width-3-5\:large {
        width: 60%;
    }

    .x-width-4-5\:large {
        width: 80%;
    }

    /* Sixths */
    .x-width-1-6\:large {
        width: unquote('calc(100% * 1 / 6.001)');
    }

    .x-width-5-6\:large {
        width: unquote('calc(100% * 5 / 6.001)');
    }

    /* Pixel */
    .x-width-small\:large {
        width: $width-small-width;
    }

    .x-width-medium\:large {
        width: $width-medium-width;
    }

    .x-width-large\:large {
        width: $width-large-width;
    }

    .x-width-xlarge\:large {
        width: $width-xlarge-width;
    }

    .x-width-2xlarge\:large {
        width: $width-2xlarge-width;
    }

    @if ($deprecated==true) {
        .x-width-xxlarge\:large {
            width: $width-2xlarge-width;
        }
    }

    /* Auto */
    .x-width-auto\:large {
        width: auto;
    }

    /* Expand */
    .x-width-expand\:large {
        flex     : 1;
        min-width: 1px;
    }

}

/* Large screen and bigger */
@media (min-width: $breakpoint-xlarge) {

    /* Whole */
    .x-width-1-1\:xlarge {
        width: 100%;
    }

    /* Halves */
    .x-width-1-2\:xlarge {
        width: 50%;
    }

    /* Thirds */
    .x-width-1-3\:xlarge {
        width: unquote('calc(100% * 1 / 3.001)');
    }

    .x-width-2-3\:xlarge {
        width: unquote('calc(100% * 2 / 3.001)');
    }

    /* Quarters */
    .x-width-1-4\:xlarge {
        width: 25%;
    }

    .x-width-3-4\:xlarge {
        width: 75%;
    }

    /* Fifths */
    .x-width-1-5\:xlarge {
        width: 20%;
    }

    .x-width-2-5\:xlarge {
        width: 40%;
    }

    .x-width-3-5\:xlarge {
        width: 60%;
    }

    .x-width-4-5\:xlarge {
        width: 80%;
    }

    /* Sixths */
    .x-width-1-6\:xlarge {
        width: unquote('calc(100% * 1 / 6.001)');
    }

    .x-width-5-6\:xlarge {
        width: unquote('calc(100% * 5 / 6.001)');
    }

    /* Pixel */
    .x-width-small\:xlarge {
        width: $width-small-width;
    }

    .x-width-medium\:xlarge {
        width: $width-medium-width;
    }

    .x-width-large\:xlarge {
        width: $width-large-width;
    }

    .x-width-xlarge\:xlarge {
        width: $width-xlarge-width;
    }

    .x-width-2xlarge\:xlarge {
        width: $width-2xlarge-width;
    }

    @if ($deprecated==true) {
        .x-width-xxlarge\:xlarge {
            width: $width-2xlarge-width;
        }
    }

    /* Auto */
    .x-width-auto\:xlarge {
        width: auto;
    }

    /* Expand */
    .x-width-expand\:xlarge {
        flex     : 1;
        min-width: 1px;
    }

}


// Hooks
// ========================================================================

@if(mixin-exists(hook-width-misc)) {
    @include hook-width-misc();
}

// @mixin hook-width-misc(){}

//
// Component: Width
//
// ========================================================================


// Variables
// ========================================================================


// Miscellaneous
// ========================================================================

// @mixin hook-width-misc(){}