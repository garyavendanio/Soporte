// Name:            Container
// Description:     Component to align and center your site and grid content
//
// Component:       `x-container`
//
// Modifier:        `x-container-small`
//                  `x-container-large`
//                  `x-container-expand`
//                  `x-container-expand-left`
//                  `x-container-expand-right`
//                  `x-container-item-padding-remove-left`
//                  `x-container-item-padding-remove-right`
//
// ========================================================================


// Variables
// ========================================================================

$container-max-width       : 1200px !default;
$container-xsmall-max-width: 750px !default;
$container-small-max-width : 900px !default;
$container-large-max-width : 1400px !default;
$container-xlarge-max-width: 1600px !default;

$container-padding-horizontal  : 15px !default;
$container-padding-horizontal-s: $global-gutter !default;
$container-padding-horizontal-m: $global-medium-gutter !default;


/* ========================================================================
   Component: Container
 ========================================================================== */

/*
 * 1. Box sizing has to be `content-box` so the max-width is always the same and
 *    unaffected by the padding on different breakpoints. It's important for the size modifiers.
 */

.x-container {
    display      : flow-root;
    /* 1 */
    box-sizing   : content-box;
    max-width    : $container-max-width;
    margin-left  : auto;
    margin-right : auto;
    padding-left : $container-padding-horizontal;
    padding-right: $container-padding-horizontal;
}

/* Phone landscape and bigger */
@media (min-width: $breakpoint-small) {

    .x-container {
        padding-left : $container-padding-horizontal-s;
        padding-right: $container-padding-horizontal-s;
    }

}

/* Tablet landscape and bigger */
@media (min-width: $breakpoint-medium) {

    .x-container {
        padding-left : $container-padding-horizontal-m;
        padding-right: $container-padding-horizontal-m;
    }

}

/*
 * Remove margin from the last-child
 */

.x-container> :last-child {
    margin-bottom: 0;
}

/*
 * Remove padding from nested containers
 */

.x-container .x-container {
    padding-left : 0;
    padding-right: 0;
}


/* Size modifier
 ========================================================================== */

.x-container-xsmall {
    max-width: $container-xsmall-max-width;
}

.x-container-small {
    max-width: $container-small-max-width;
}

.x-container-large {
    max-width: $container-large-max-width;
}

.x-container-xlarge {
    max-width: $container-xlarge-max-width;
}

.x-container-expand {
    max-width: none;
}


/* Expand modifier
 ========================================================================== */

/*
 * Expand one side only
 */

.x-container-expand-left {
    margin-left: 0;
}

.x-container-expand-right {
    margin-right: 0;
}

/* Phone landscape and bigger */
@media (min-width: $breakpoint-small) {

    .x-container-expand-left.x-container-xsmall,
    .x-container-expand-right.x-container-xsmall {
        max-width: unquote('calc(50% + (#{$container-xsmall-max-width} / 2) - #{$container-padding-horizontal-s})');
    }

    .x-container-expand-left.x-container-small,
    .x-container-expand-right.x-container-small {
        max-width: unquote('calc(50% + (#{$container-small-max-width} / 2) - #{$container-padding-horizontal-s})');
    }

}

/* Tablet landscape and bigger */
@media (min-width: $breakpoint-medium) {

    .x-container-expand-left,
    .x-container-expand-right {
        max-width: unquote('calc(50% + (#{$container-max-width} / 2) - #{$container-padding-horizontal-m})');
    }

    .x-container-expand-left.x-container-xsmall,
    .x-container-expand-right.x-container-xsmall {
        max-width: unquote('calc(50% + (#{$container-xsmall-max-width} / 2) - #{$container-padding-horizontal-m})');
    }

    .x-container-expand-left.x-container-small,
    .x-container-expand-right.x-container-small {
        max-width: unquote('calc(50% + (#{$container-small-max-width} / 2) - #{$container-padding-horizontal-m})');
    }

    .x-container-expand-left.x-container-large,
    .x-container-expand-right.x-container-large {
        max-width: unquote('calc(50% + (#{$container-large-max-width} / 2) - #{$container-padding-horizontal-m})');
    }

    .x-container-expand-left.x-container-xlarge,
    .x-container-expand-right.x-container-xlarge {
        max-width: unquote('calc(50% + (#{$container-xlarge-max-width} / 2) - #{$container-padding-horizontal-m})');
    }

}


/* Item
 ========================================================================== */

/*
 * Utility classes to reset container padding on the left or right side
 * Note: It has to be negative margin on the item, because it's specific to the item.
 */

.x-container-item-padding-remove-left,
.x-container-item-padding-remove-right {
    width: unquote('calc(100% + #{$container-padding-horizontal})')
}

.x-container-item-padding-remove-left {
    margin-left: (-$container-padding-horizontal);
}

.x-container-item-padding-remove-right {
    margin-right: (-$container-padding-horizontal);
}

/* Phone landscape and bigger */
@media (min-width: $breakpoint-small) {

    .x-container-item-padding-remove-left,
    .x-container-item-padding-remove-right {
        width: unquote('calc(100% + #{$container-padding-horizontal-s})')
    }

    .x-container-item-padding-remove-left {
        margin-left: (-$container-padding-horizontal-s);
    }

    .x-container-item-padding-remove-right {
        margin-right: (-$container-padding-horizontal-s);
    }

}

/* Tablet landscape and bigger */
@media (min-width: $breakpoint-medium) {

    .x-container-item-padding-remove-left,
    .x-container-item-padding-remove-right {
        width: unquote('calc(100% + #{$container-padding-horizontal-m})')
    }

    .x-container-item-padding-remove-left {
        margin-left: (-$container-padding-horizontal-m);
    }

    .x-container-item-padding-remove-right {
        margin-right: (-$container-padding-horizontal-m);
    }

}


// Hooks
// ========================================================================

@if(mixin-exists(hook-container-misc)) {
    @include hook-container-misc();
}

// @mixin hook-container-misc(){}

//
// Component: Container
//
// ========================================================================


// Variables
// ========================================================================


// Miscellaneous
// ========================================================================

// @mixin hook-container-misc(){}