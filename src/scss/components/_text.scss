// Name:            Text
// Description:     Utilities for text
//
// Component:       `x-text-*`
//
// ========================================================================


// Variables
// ========================================================================

$text-lex-font-size  : $global-large-font-size !default;
$text-lex-line-height: 1.5 !default;
$text-lex-color      : $global-emphasis-color !default;

$text-meta-font-size  : $global-small-font-size !default;
$text-meta-line-height: 1.4 !default;
$text-meta-color      : $global-muted-color !default;

$text-small-font-size  : $global-small-font-size !default;
$text-small-line-height: 1.5 !default;

$text-large-font-size  : $global-large-font-size !default;
$text-large-line-height: 1.5 !default;

$text-muted-color    : $global-muted-color !default;
$text-emphasis-color : $global-emphasis-color !default;
$text-primary-color  : $global-primary-background !default;
$text-secondary-color: $global-secondary-background !default;
$text-success-color  : $global-success-background !default;
$text-warning-color  : $global-warning-background !default;
$text-danger-color   : $global-danger-background !default;

$text-background-color: $global-primary-background !default;


/* ========================================================================
   Component: Text
 ========================================================================== */


/* Style modifiers
 ========================================================================== */

.x-text-lead {
    font-size  : $text-lex-font-size;
    line-height: $text-lex-line-height;
    color      : $text-lex-color;

    @if(mixin-exists(hook-text-lead)) {
        @include hook-text-lead();
    }
}

.x-text-meta {
    font-size  : $text-meta-font-size;
    line-height: $text-meta-line-height;
    color      : $text-meta-color;

    @if(mixin-exists(hook-text-meta)) {
        @include hook-text-meta();
    }
}


/* Size modifiers
 ========================================================================== */

.x-text-small {
    font-size  : $text-small-font-size;
    line-height: $text-small-line-height;

    @if(mixin-exists(hook-text-small)) {
        @include hook-text-small();
    }
}

.x-text-large {
    font-size  : $text-large-font-size;
    line-height: $text-large-line-height;

    @if(mixin-exists(hook-text-large)) {
        @include hook-text-large();
    }
}

.x-text-default {
    font-size  : $global-font-size;
    line-height: $global-line-height;
}


/* Weight modifier
 ========================================================================== */

.x-text-light {
    font-weight: 300;
}

.x-text-normal {
    font-weight: 400;
}

.x-text-bold {
    font-weight: 700;
}

.x-text-lighter {
    font-weight: lighter;
}

.x-text-bolder {
    font-weight: bolder;
}


/* Style modifier
 ========================================================================== */

.x-text-italic {
    font-style: italic;
}


/* Transform modifier
 ========================================================================== */

.x-text-capitalize {
    text-transform: capitalize !important;
}

.x-text-uppercase {
    text-transform: uppercase !important;
}

.x-text-lowercase {
    text-transform: lowercase !important;
}


/* Color modifiers
 ========================================================================== */

.x-text-muted {
    color: $text-muted-color !important;
}

.x-text-emphasis {
    color: $text-emphasis-color !important;
}

.x-text-primary {
    color: $text-primary-color !important;
}

.x-text-secondary {
    color: $text-secondary-color !important;
}

.x-text-success {
    color: $text-success-color !important;
}

.x-text-warning {
    color: $text-warning-color !important;
}

.x-text-danger {
    color: $text-danger-color !important;
}


/* Background modifier
 ========================================================================== */

/*
 * 1. The background clips to the foreground text. Works in Chrome, Firefox, Safari, Edge and Opera
 *    Default color is set to transparent
 * 2. Container fits the text
 * 3. Fallback color for IE11
 */

.x-text-background {
    /* 1 */
    background-clip        : text;
    -webkit-background-clip: text;
    /* 2 */
    display                : inline-block;
    /* 3 */
    color                  : $text-background-color !important;
}

@supports (-webkit-background-clip: text) {

    .x-text-background {
        background-color: $text-background-color;
        color           : transparent !important;

        @if(mixin-exists(hook-text-background)) {
            @include hook-text-background();
        }
    }

}


/* Alignment modifiers
 ========================================================================== */

.x-text-left {
    text-align: left !important;
}

.x-text-right {
    text-align: right !important;
}

.x-text-center {
    text-align: center !important;
}

.x-text-justify {
    text-align: justify !important;
}

/* Phone landscape and bigger */
@media (min-width: $breakpoint-small) {

    .x-text-left\:small {
        text-align: left !important;
    }

    .x-text-right\:small {
        text-align: right !important;
    }

    .x-text-center\:small {
        text-align: center !important;
    }

}

/* Tablet landscape and bigger */
@media (min-width: $breakpoint-medium) {

    .x-text-left\:medium {
        text-align: left !important;
    }

    .x-text-right\:medium {
        text-align: right !important;
    }

    .x-text-center\:medium {
        text-align: center !important;
    }

}

/* Desktop and bigger */
@media (min-width: $breakpoint-large) {

    .x-text-left\:large {
        text-align: left !important;
    }

    .x-text-right\:large {
        text-align: right !important;
    }

    .x-text-center\:large {
        text-align: center !important;
    }

}

/* Large screen and bigger */
@media (min-width: $breakpoint-xlarge) {

    .x-text-left\:xlarge {
        text-align: left !important;
    }

    .x-text-right\:xlarge {
        text-align: right !important;
    }

    .x-text-center\:xlarge {
        text-align: center !important;
    }

}

/*
 * Vertical
 */

.x-text-top {
    vertical-align: top !important;
}

.x-text-middle {
    vertical-align: middle !important;
}

.x-text-bottom {
    vertical-align: bottom !important;
}

.x-text-baseline {
    vertical-align: baseline !important;
}


/* Wrap modifiers
 ========================================================================== */

/*
 * Prevent text from wrapping onto multiple lines
 */

.x-text-nowrap {
    white-space: nowrap;
}

/*
 * 1. Make sure a max-width is set after which truncation can occur
 * 2. Prevent text from wrapping onto multiple lines, and truncate with an ellipsis
 * 3. Fix for table cells
 */

.x-text-truncate {
    /* 1 */
    max-width    : 100%;
    /* 2 */
    overflow     : hidden;
    text-overflow: ellipsis;
    white-space  : nowrap;
}

/* 2 */
th.x-text-truncate,
td.x-text-truncate {
    max-width: 0;
}


/*
 * 1. Wrap long words onto the next line and break them if they are too long to fit
 * 2. Legacy `word-wrap` as fallback for `overflow-wrap`
 * 3. Fix `overflow-wrap` which doesn't work with table cells in Chrome, Opera, IE11 and Edge
 *    Must use `break-all` to support IE11 and Edge
 * Note: Not using `hyphens: auto;` because it hyphenates text even if not needed
 */

.x-text-break {
    /* 1 */
    overflow-wrap: break-word;
    /* 2 */
    word-wrap    : break-word;
}

/* 3 */
th.x-text-break,
td.x-text-break {
    word-break: break-all;
}



// Hooks
// ========================================================================

@if(mixin-exists(hook-text-misc)) {
    @include hook-text-misc();
}

// @mixin hook-text-lead(){}
// @mixin hook-text-meta(){}
// @mixin hook-text-small(){}
// @mixin hook-text-large(){}
// @mixin hook-text-background(){}
// @mixin hook-text-misc(){}


// Inverse
// ========================================================================

$inverse-text-lex-color     : $inverse-global-color !default;
$inverse-text-meta-color     : $inverse-global-muted-color !default;
$inverse-text-muted-color    : $inverse-global-muted-color !default;
$inverse-text-emphasis-color : $inverse-global-emphasis-color !default;
$inverse-text-primary-color  : $inverse-global-primary-background !default;
$inverse-text-secondary-color: $inverse-global-primary-background !default;



// @mixin hook-inverse-text-lead(){}
// @mixin hook-inverse-text-meta(){}

//
// Component: Text
//
// ========================================================================


// Variables
// ========================================================================

//
// New
//

$text-meta-link-color:                           $text-meta-color !default;
$text-meta-link-hover-color:                     $global-color !default;


// Style modifiers
// ========================================================================

// @mixin hook-text-lead(){}




// Size modifiers
// ========================================================================

// @mixin hook-text-small(){}

// @mixin hook-text-large(){}


// Background modifier
// ========================================================================

// @mixin hook-text-background(){}


// Miscellaneous
// ========================================================================

// @mixin hook-text-misc(){}


// Inverse
// ========================================================================

// @mixin hook-inverse-text-lead(){}
// @mixin hook-inverse-text-meta(){}
