// Name:            Comment
// Description:     Component to create nested comments
//
// Component:       `x-comment`
//
// Sub-objects:     `x-comment-body`
//                  `x-comment-header`
//                  `x-comment-title`
//                  `x-comment-meta`
//                  `x-comment-avatar`
//                  `x-comment-list`
//
// Modifier:        `x-comment-primary`
//
// ========================================================================


// Variables
// ========================================================================

$comment-header-margin-bottom: $global-margin !default;

$comment-title-font-size  : $global-medium-font-size !default;
$comment-title-line-height: 1.4 !default;

$comment-meta-font-size  : $global-small-font-size !default;
$comment-meta-line-height: 1.4 !default;
$comment-meta-color      : $global-muted-color !default;

$comment-list-margin-top    : $global-large-margin !default;
$comment-list-padding-left  : 30px !default;
$comment-list-padding-left-m: 100px !default;


/* ========================================================================
   Component: Comment
 ========================================================================== */

.x-comment {
    @if(mixin-exists(hook-comment)) {
        @include hook-comment();
    }
}


/* Sections
 ========================================================================== */

.x-comment-body {
    display      : flow-root;
    overflow-wrap: break-word;
    word-wrap    : break-word;

    @if(mixin-exists(hook-comment-body)) {
        @include hook-comment-body();
    }
}

.x-comment-header {
    display      : flow-root;
    margin-bottom: $comment-header-margin-bottom;

    @if(mixin-exists(hook-comment-header)) {
        @include hook-comment-header();
    }
}

/*
 * Remove margin from the last-child
 */

.x-comment-body> :last-child,
.x-comment-header> :last-child {
    margin-bottom: 0;
}


/* Title
 ========================================================================== */

.x-comment-title {
    font-size  : $comment-title-font-size;
    line-height: $comment-title-line-height;

    @if(mixin-exists(hook-comment-title)) {
        @include hook-comment-title();
    }
}


/* Meta
 ========================================================================== */

.x-comment-meta {
    font-size  : $comment-meta-font-size;
    line-height: $comment-meta-line-height;
    color      : $comment-meta-color;

    @if(mixin-exists(hook-comment-meta)) {
        @include hook-comment-meta();
    }
}


/* Avatar
 ========================================================================== */

.x-comment-avatar {
    @if(mixin-exists(hook-comment-avatar)) {
        @include hook-comment-avatar();
    }
}


/* List
 ========================================================================== */

.x-comment-list {
    padding   : 0;
    list-style: none;
}

/* Adjacent siblings */
.x-comment-list> :nth-child(n+2) {
    margin-top: $comment-list-margin-top;

    @if(mixin-exists(hook-comment-list-adjacent)) {
        @include hook-comment-list-adjacent();
    }
}

/*
 * Sublists
 * Note: General sibling selector allows reply block between comment and sublist
 */

.x-comment-list .x-comment~ul {
    margin      : $comment-list-margin-top 0 0 0;
    padding-left: $comment-list-padding-left;
    list-style  : none;

    @if(mixin-exists(hook-comment-list-sub)) {
        @include hook-comment-list-sub();
    }
}

/* Tablet and bigger */
@media (min-width: $breakpoint-medium) {

    .x-comment-list .x-comment~ul {
        padding-left: $comment-list-padding-left-m;
    }

}

/* Adjacent siblings */
.x-comment-list .x-comment~ul> :nth-child(n+2) {
    margin-top: $comment-list-margin-top;

    @if(mixin-exists(hook-comment-list-sub-adjacent)) {
        @include hook-comment-list-sub-adjacent();
    }
}


/* Style modifier
 ========================================================================== */

.x-comment-primary {
    @if(mixin-exists(hook-comment-primary)) {
        @include hook-comment-primary();
    }
}


// Hooks
// ========================================================================

@if(mixin-exists(hook-comment-misc)) {
    @include hook-comment-misc();
}

// @mixin hook-comment(){}
// @mixin hook-comment-body(){}
// @mixin hook-comment-header(){}
// @mixin hook-comment-title(){}
// @mixin hook-comment-meta(){}
// @mixin hook-comment-avatar(){}
// @mixin hook-comment-list-adjacent(){}
// @mixin hook-comment-list-sub(){}
// @mixin hook-comment-list-sub-adjacent(){}
// @mixin hook-comment-primary(){}
// @mixin hook-comment-misc(){}

//
// Component: Comment
//
// ========================================================================


// Variables
// ========================================================================

//
// New
//

$comment-primary-padding:                        $global-gutter !default;
$comment-primary-background:                     $global-muted-background !default;


// Component
// ========================================================================

// @mixin hook-comment(){}


// Sections
// ========================================================================

// @mixin hook-comment-body(){}

// @mixin hook-comment-header(){}


// Title
// ========================================================================

// @mixin hook-comment-title(){}


// Meta
// ========================================================================

// @mixin hook-comment-meta(){}


// Avatar
// ========================================================================

// @mixin hook-comment-avatar(){}


// List
// ========================================================================

// @mixin hook-comment-list-adjacent(){}

// @mixin hook-comment-list-sub(){}

// @mixin hook-comment-list-sub-adjacent(){}


// Style modifier
// ========================================================================




// Miscellaneous
// ========================================================================

// @mixin hook-comment-misc(){}