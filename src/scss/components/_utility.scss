// Name:            Utility
// Description:     Utilities collection
//
// Component:       `x-panel-*`
//                  `x-clearfix`
//                  `x-float-*`
//                  `x-overflow-*`
//                  `x-resize-*`
//                  `x-display-*`
//                  `x-inline-*`
//                  `x-responsive-*`
//                  `x-preserve-width`
//                  `x-border-*`
//                  `x-box-shadow-*`
//                  `x-box-shadow-bottom`
//                  `x-dropcap`
//                  `x-logo`
//                  `x-blend-*`
//                  `x-transform-*`
//                  `x-transform-origin-*`
//
// States:          `x-disabled`
//                  `x-drag`
//                  `x-dragover`
//                  `x-preserve`
//
// ========================================================================


// Variables
// ========================================================================

$panel-scrollable-height      : 170px !default;
$panel-scrollable-padding     : 10px !default;
$panel-scrollable-border-width: $global-border-width !default;
$panel-scrollable-border      : $global-border !default;

$border-rounded-border-radius: 5px !default;
$border-xrounded-border-radius: 10px !default;
$border-xxrounded-border-radius: 15px !default;

$box-shadow-duration: 0.1s !default;

$box-shadow-bottom-height       : 30px !default;
$box-shadow-bottom-border-radius: 100% !default;
$box-shadow-bottom-background   : #444 !default;
$box-shadow-bottom-blur         : 20px !default;

$dropcap-margin-right: 10px !default;
$dropcap-font-size   : (($global-line-height * 3) * 1em) !default;

$logo-font-size  : $global-large-font-size !default;
$logo-font-family: $global-font-family !default;
$logo-color      : $global-color !default;
$logo-hover-color: $global-color !default;

$dragover-box-shadow: 0 0 20px rgba(100, 100, 100, 0.3) !default;


/* ========================================================================
   Component: Utility
 ========================================================================== */


/* Panel
 ========================================================================== */

.x-panel {
    display   : flow-root;
    position  : relative;
    box-sizing: border-box;
}

/*
 * Remove margin from the last-child
 */

.x-panel> :last-child {
    margin-bottom: 0;
}


/*
 * Scrollable
 */

.x-panel-scrollable {
    height                    : $panel-scrollable-height;
    padding                   : $panel-scrollable-padding;
    border                    : $panel-scrollable-border-width solid $panel-scrollable-border;
    overflow                  : auto;
    -webkit-overflow-scrolling: touch;
    resize                    : both;

    @if(mixin-exists(hook-panel-scrollable)) {
        @include hook-panel-scrollable();
    }
}


/* Clearfix
 ========================================================================== */

/*
 * 1. `table-cell` is used with `::before` because `table` creates a 1px gap when it becomes a flex item, only in Webkit
 * 2. `table` is used again with `::after` because `clear` only works with block elements.
 * Note: `display: block` with `overflow: hidden` is currently not working in the latest Safari
 */

/* 1 */
.x-clearfix::before {
    content: "";
    display: table-cell;
}

/* 2 */
.x-clearfix::after {
    content: "";
    display: table;
    clear  : both;
}


/* Float
 ========================================================================== */

/*
 * 1. Prevent content overflow
 */

.x-float-left {
    float: left;
}

.x-float-right {
    float: right;
}

/* 1 */
[class*='x-float-'] {
    max-width: 100%;
}


/* Overfow
 ========================================================================== */

.x-overflow-hidden {
    overflow: hidden;
}

/*
 * Enable scrollbars if content is clipped
 * Note: Firefox ignores `padding-bottom` for the scrollable overflow https://bugzilla.mozilla.org/show_bug.cgi?id=748518
 */

.x-overflow-auto {
    overflow                  : auto;
    -webkit-overflow-scrolling: touch;
}

.x-overflow-auto> :last-child {
    margin-bottom: 0;
}


/* Resize
 ========================================================================== */

.x-resize {
    resize: both;
}

.x-resize-vertical {
    resize: vertical;
}


/* Display
 ========================================================================== */

.x-display-block {
    display: block !important;
}

.x-display-inline {
    display: inline !important;
}

.x-display-inline-block {
    display: inline-block !important;
}


/* Inline
 ========================================================================== */

/*
 * 1. Container fits its content
 * 2. Create position context
 * 3. Prevent content overflow
 * 4. Behave like most inline-block elements
 * 5. Force hardware acceleration without creating a new stacking context
 *    to fix 1px glitch when combined with overlays and transitions in Webkit
 * 6. Clip child elements
 */

[class*='x-inline'] {
    /* 1 */
    display                    : inline-block;
    /* 2 */
    position                   : relative;
    /* 3 */
    max-width                  : 100%;
    /* 4 */
    vertical-align             : middle;
    /* 5 */
    backface-visibility        : hidden;
    -webkit-backface-visibility: hidden;
}

.x-inline-clip {
    /* 6 */
    overflow: hidden;
}


/* Responsive objects
 ========================================================================== */

/*
 * Preserve original dimensions
 * Because `img, `video`, `canvas` and  `audio` are already responsive by default, see Base component
 */

.x-preserve-width,
.x-preserve-width canvas,
.x-preserve-width img,
.x-preserve-width svg,
.x-preserve-width video {
    max-width: none;
}

/*
 * Responsiveness
 * Corrects `max-width` and `max-height` behavior if padding and border are used
 */

.x-responsive-width,
.x-responsive-height {
    box-sizing: border-box;
}

/*
 * 1. Set a maximum width. `important` needed to override `x-preserve-width img`
 * 2. Auto scale the height. Only needed if `height` attribute is present
 */

.x-responsive-width {
    /* 1 */
    max-width: 100% !important;
    /* 2 */
    height   : auto;
}

/*
 * 1. Set a maximum height. Only works if the parent element has a fixed height
 * 2. Auto scale the width. Only needed if `width` attribute is present
 * 3. Reset max-width, which `img, `video`, `canvas` and  `audio` already have by default
 */

.x-responsive-height {
    /* 1 */
    max-height: 100%;
    /* 2 */
    width     : auto;
    /* 3 */
    max-width : none;
}


/* Border
 ========================================================================== */

.x-border-circle {
    border-radius: 50%;
}

.x-border-pill {
    border-radius: 500px;
}

.x-border-rounded {
    border-radius: $border-rounded-border-radius;
}

.x-border-xrounded {
    border-radius: $border-xrounded-border-radius;
}

.x-border-xxrounded {
    border-radius: $border-xxrounded-border-radius;
}

/*
 * Fix `overflow: hidden` to be ignored with border-radius and CSS transforms in Webkit
 */

.x-inline-clip[class*='x-border-'] {
    -webkit-transform: translateZ(0);
    transform        : translateZ(0);
}


/* Box-shadow
 ========================================================================== */

.x-box-shadow-small {
    box-shadow: $global-small-box-shadow;
}

.x-box-shadow-medium {
    box-shadow: $global-medium-box-shadow;
}

.x-box-shadow-large {
    box-shadow: $global-large-box-shadow;
}

.x-box-shadow-xlarge {
    box-shadow: $global-xlarge-box-shadow;
}

/*
 * Hover
 */

[class*='x-box-shadow-hover'] {
    transition: box-shadow $box-shadow-duration ease-in-out;
}

.x-box-shadow-hover-small:hover {
    box-shadow: $global-small-box-shadow;
}

.x-box-shadow-hover-medium:hover {
    box-shadow: $global-medium-box-shadow;
}

.x-box-shadow-hover-large:hover {
    box-shadow: $global-large-box-shadow;
}

.x-box-shadow-hover-xlarge:hover {
    box-shadow: $global-xlarge-box-shadow;
}


/* Box-shadow bottom
 ========================================================================== */

/*
 * 1. Set position.
 * 2. Set style
 * 3. Blur doesn't work on pseudo elements with negative `z-index` in Edge.
 *    Solved by using `before` and add position context to child elements.
 */

@supports (filter: blur(0)) {

    .x-box-shadow-bottom {
        display       : inline-block;
        position      : relative;
        max-width     : 100%;
        vertical-align: middle;
    }

    .x-box-shadow-bottom::before {
        content      : '';
        /* 1 */
        position     : absolute;
        bottom       : (-$box-shadow-bottom-height);
        left         : 0;
        right        : 0;
        /* 2 */
        height       : $box-shadow-bottom-height;
        border-radius: $box-shadow-bottom-border-radius;
        background   : $box-shadow-bottom-background;
        filter       : blur($box-shadow-bottom-blur);

        @if(mixin-exists(hook-box-shadow-bottom)) {
            @include hook-box-shadow-bottom();
        }
    }

    /* 3 */
    .x-box-shadow-bottom>* {
        position: relative;
    }

}


/* Drop cap
 ========================================================================== */

/*
 * 1. Firefox doesn't apply `::first-letter` if the first letter is inside child elements
 *    https://bugzilla.mozilla.org/show_bug.cgi?id=214004
 * 2. In Firefox, a floating `::first-letter` doesn't have a line box and there for no `line-height`
 *    https://bugzilla.mozilla.org/show_bug.cgi?id=317933
 * 3. Caused by 1.: Edge creates two nested `::first-letter` containers, one for each selector
 *    This doubles the `font-size` exponential when using the `em` unit.
 */

.x-dropcap::first-letter,
/* 1 */
.x-dropcap>p:first-of-type::first-letter {
    display     : block;
    margin-right: $dropcap-margin-right;
    float       : left;
    font-size   : $dropcap-font-size;
    line-height : 1;

    @if(mixin-exists(hook-dropcap)) {
        @include hook-dropcap();
    }
}

/* 2 */
@-moz-document url-prefix() {

    .x-dropcap::first-letter,
    .x-dropcap>p:first-of-type::first-letter {
        margin-top: 1.1%;
    }

}

/* 3 */
@supports (-ms-ime-align: auto) {

    .x-dropcap>p:first-of-type::first-letter {
        font-size: 1em;
    }

}


/* Logo
 ========================================================================== */

/*
 * 1. Required for `a`
 */

.x-logo {
    font-size      : $logo-font-size;
    font-family    : $logo-font-family;
    color          : $logo-color;
    /* 1 */
    text-decoration: none;

    @if(mixin-exists(hook-logo)) {
        @include hook-logo();
    }
}

/* Hover + Focus */
.x-logo:hover,
.x-logo:focus {
    color          : $logo-hover-color;
    outline        : none;
    /* 1 */
    text-decoration: none;

    @if(mixin-exists(hook-logo-hover)) {
        @include hook-logo-hover();
    }
}

.x-logo-inverse {
    display: none;
}


/* Disabled State
 ========================================================================== */

.x-disabled {
    pointer-events: none;
}


/* Drag State
 ========================================================================== */

/*
 * 1. Needed if moving over elements with have their own cursor on hover, e.g. links or buttons
 * 2. Fix dragging over iframes
 */

.x-drag,
/* 1 */
.x-drag * {
    cursor: move;
}

/* 2 */
.x-drag iframe {
    pointer-events: none;
}


/* Dragover State
 ========================================================================== */

/*
 * Create a box-shadow when dragging a file over the upload area
 */

.x-dragover {
    box-shadow: $dragover-box-shadow;
}


/* Blend modes
 ========================================================================== */

.x-blend-multiply {
    mix-blend-mode: multiply;
}

.x-blend-screen {
    mix-blend-mode: screen;
}

.x-blend-overlay {
    mix-blend-mode: overlay;
}

.x-blend-darken {
    mix-blend-mode: darken;
}

.x-blend-lighten {
    mix-blend-mode: lighten;
}

.x-blend-color-dodge {
    mix-blend-mode: color-dodge;
}

.x-blend-color-burn {
    mix-blend-mode: color-burn;
}

.x-blend-hard-light {
    mix-blend-mode: hard-light;
}

.x-blend-soft-light {
    mix-blend-mode: soft-light;
}

.x-blend-difference {
    mix-blend-mode: difference;
}

.x-blend-exclusion {
    mix-blend-mode: exclusion;
}

.x-blend-hue {
    mix-blend-mode: hue;
}

.x-blend-saturation {
    mix-blend-mode: saturation;
}

.x-blend-color {
    mix-blend-mode: color;
}

.x-blend-luminosity {
    mix-blend-mode: luminosity;
}


/* Transform
========================================================================== */

.x-transform-center {
    transform: translate(-50%, -50%);
}


/* Transform Origin
========================================================================== */

.x-transform-origin-top-left {
    transform-origin: 0 0;
}

.x-transform-origin-top-center {
    transform-origin: 50% 0;
}

.x-transform-origin-top-right {
    transform-origin: 100% 0;
}

.x-transform-origin-center-left {
    transform-origin: 0 50%;
}

.x-transform-origin-center-right {
    transform-origin: 100% 50%;
}

.x-transform-origin-bottom-left {
    transform-origin: 0 100%;
}

.x-transform-origin-bottom-center {
    transform-origin: 50% 100%;
}

.x-transform-origin-bottom-right {
    transform-origin: 100% 100%;
}


// Hooks
// ========================================================================

@if(mixin-exists(hook-utility-misc)) {
    @include hook-utility-misc();
}

// @mixin hook-panel-scrollable(){}
// @mixin hook-box-shadow-bottom(){}
// @mixin hook-dropcap(){}
// @mixin hook-logo(){}
// @mixin hook-logo-hover(){}
// @mixin hook-utility-misc(){}


// Inverse
// ========================================================================

$inverse-logo-color      : $inverse-global-color !default;
$inverse-logo-hover-color: $inverse-global-color !default;



// @mixin hook-inverse-dropcap(){}
// @mixin hook-inverse-logo(){}
// @mixin hook-inverse-logo-hover(){}

//
// Component: Utility
//
// ========================================================================


// Variables
// ========================================================================


// Panel
// ========================================================================

// @mixin hook-panel-scrollable(){}


// Box-shadow bottom
// ========================================================================

// @mixin hook-box-shadow-bottom(){}


// Drop cap
// ========================================================================




// Logo
// ========================================================================

// @mixin hook-logo(){}

// @mixin hook-logo-hover(){}


// Miscellaneous
// ========================================================================

// @mixin hook-utility-misc(){}


// Inverse
// ========================================================================

// @mixin hook-inverse-dropcap(){}

// @mixin hook-inverse-logo(){}
// @mixin hook-inverse-logo-hover(){}